"""
API routes for service logs from the poly_micro_logs collection.
These routes handle the retrieval of logs generated by services.
"""

from fastapi import APIRouter, Depends, Path, Query, HTTPException, status
from typing import List, Optional, Dict, Any

from app.services.service_logs_service import ServiceLogsService
from app.api.dependencies import get_service_logs_service
from app.schemas.log import Log, LogCreate, Severity

router = APIRouter()

@router.get("/", response_model=List[Log])
async def get_all_service_logs(
    project_id: Optional[str] = Query(None, description="Filter logs by project ID"),
    service_id: Optional[str] = Query(None, description="Filter logs by service ID"),
    test_id: Optional[str] = Query(None, description="Filter logs by test ID"),
    func_id: Optional[str] = Query(None, description="Filter logs by function ID"),
    severity: Optional[Severity] = Query(None, description="Filter logs by severity"),
    source: Optional[str] = Query(None, description="Filter logs by source"),
    logs_service: ServiceLogsService = Depends(get_service_logs_service)
):
    """Get all service logs with optional filtering"""
    return await logs_service.get_all_logs(
        project_id=project_id,
        service_id=service_id,
        test_id=test_id,
        func_id=func_id,
        severity=severity,
        source=source
    )

@router.get("/project/{project_id}", response_model=List[Log])
async def get_logs_by_project(
    project_id: str = Path(..., description="The project ID to filter logs by"),
    logs_service: ServiceLogsService = Depends(get_service_logs_service)
):
    """Get all service logs for a specific project"""
    return await logs_service.get_logs_by_project(project_id)

@router.get("/service/{service_id}", response_model=List[Log])
async def get_logs_by_service(
    service_id: str = Path(..., description="The service ID to filter logs by"),
    logs_service: ServiceLogsService = Depends(get_service_logs_service)
):
    """Get all service logs for a specific service"""
    return await logs_service.get_logs_by_service(service_id)

@router.get("/{log_id}", response_model=Log)
async def get_log(
    log_id: str = Path(..., description="The ID of the log to get"),
    logs_service: ServiceLogsService = Depends(get_service_logs_service)
):
    """Get a specific service log by ID"""
    return await logs_service.get_log_by_id(log_id)
