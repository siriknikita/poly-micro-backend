services:
  mongodb:
    image: mongo:latest
    container_name: poly-micro-mongodb
    command: ["--bind_ip_all"]
    ports:
      - "27019:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=poly-micro-manager
    networks:
      - poly-micro-network
    healthcheck:
      test: mongosh --quiet --eval "'db.runCommand({ping:1}).ok' || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: poly-micro-redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - poly-micro-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
      cache_from:
        - poly-micro-backend:latest
    image: poly-micro-backend:latest
    container_name: poly-micro-backend
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_started
    networks:
      - poly-micro-network
    restart: unless-stopped

networks:
  poly-micro-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
